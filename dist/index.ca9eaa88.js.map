{"mappings":"AA+BA,SAAUA,MAAMC,EAAOC,GACrB,IAAK,IAAIC,EAAIF,EAAOE,GAAKD,EAAKC,UACtBA,CAEV,CA/BAC,MAAMC,UAAUC,QAAU,WACxB,IAAK,IAAIH,EAAII,KAAKC,OAAS,EAAGL,EAAI,EAAGA,IAAK,CACxC,MAAMM,EAAIC,KAAKC,MAAMD,KAAKE,UAAYT,EAAI,KACzCI,KAAKJ,GAAII,KAAKE,IAAM,CAACF,KAAKE,GAAIF,KAAKJ,GACtC,CACA,OAAOI,IACT,EAOAM,OAAOR,UAAUS,OAAS,SAAUC,GAClC,IAAIC,EAAMT,KAIV,OAHAS,EAAMN,KAAKO,KAAKD,GAChBD,EAAML,KAAKC,MAAMI,GAEVL,KAAKC,MAAMD,KAAKE,UAAYG,EAAMC,EAAM,IAAMA,CACvD,EAkBAZ,MAAMC,UAAUa,MAAQ,WACtB,OAAuB,IAAhBX,KAAKC,MACd,EAOAJ,MAAMC,UAAUc,QAAU,SAAUC,GAClC,IAAIC,EAAUd,KAAK,GACjBe,EAAY,EAQd,OAPAf,KAAKgB,SAAQ,CAACC,EAAKrB,KACbO,KAAKe,IAAIL,EAAMI,GAAOd,KAAKe,IAAIL,EAAMC,KACvCA,EAAUG,EACVF,EAAYnB,EACd,IAGK,CACLqB,IAAKH,EACLK,MAAOJ,EAEX,EAOA,MAAMK,KAAO,SAAUC,GACrB,MAAiB,iBAANA,EACFC,SAASC,cAAcF,GAEzBA,CACT,EAMAxB,MAAMC,UAAU0B,IAAM,WACpB,OAAOxB,KAAKG,KAAKC,MAAMD,KAAKE,SAAWL,KAAKC,QAC9C","sources":["js/helpers.js"],"sourcesContent":["/**\n * @description Array shuffle\n * @returns {Array}\n */\nArray.prototype.shuffle = function () {\n  for (let i = this.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [this[i], this[j]] = [this[j], this[i]];\n  }\n  return this;\n};\n\n/**\n * @description Generate random integer\n * @param max\n * @returns {number}\n */\nNumber.prototype.randTo = function (max) {\n  let min = this;\n  min = Math.ceil(min);\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n/**\n * @description Create sequence generator to iterate\n * @param start\n * @param end\n * @returns {Generator<*, void, *>}\n */\nfunction* range(start, end) {\n  for (let i = start; i <= end; i++) {\n    yield i;\n  }\n}\n\n/**\n * @description Array prototype Empty\n * @returns {boolean}\n */\nArray.prototype.empty = function () {\n  return this.length === 0 ? !0 : !!0;\n};\n\n/**\n *\n * @param {number} num\n * @returns {{val: *, index: number}}\n */\nArray.prototype.closest = function (num) {\n  let currVal = this[0],\n    currIndex = 0;\n  this.forEach((val, i) => {\n    if (Math.abs(num - val) < Math.abs(num - currVal)) {\n      currVal = val;\n      currIndex = i;\n    }\n  });\n\n  return {\n    val: currVal,\n    index: currIndex,\n  };\n};\n\n/**\n * @description DOM element selector\n * @param {HTMLElement|string} e\n * @returns {*}\n */\nconst find = function (e) {\n  if (typeof e === 'string') {\n    return document.querySelector(e);\n  }\n  return e;\n};\n\n/**\n * @description Gets random element from the array\n * @returns {*}\n */\nArray.prototype.rnd = function () {\n  return this[Math.floor(Math.random() * this.length)];\n};\n"],"names":["range","start","end","i","Array","prototype","shuffle","this","length","j","Math","floor","random","Number","randTo","max","min","ceil","empty","closest","num","currVal","currIndex","forEach","val","abs","index","find","e","document","querySelector","rnd"],"version":3,"file":"index.ca9eaa88.js.map"}