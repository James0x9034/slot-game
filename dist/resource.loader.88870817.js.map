{"version":3,"sources":["js/resource.loader.js"],"names":["Resources","loader","global","document","_len","arguments","length","resources","Array","_key","IMG_ALLOWED_TYPES","loadCallbacks","$resources","$imgs","forEach","resource","split","extension","includes","push","onLoad","fns","loadImage","_this","index","undefined","img","Image","src","addEventListener","f","call"],"mappings":";;AA0CQ,IAAA,EAAA,UAAA,GA1CFA,EAAa,SAAUC,EAAQC,GACnC,GAAIA,EAAOC,SACT,OAAO,WAAA,IAAAC,IAAAA,EAAAC,UAAAC,OAAIC,EAASC,IAAAA,MAAAJ,GAAAK,EAAAA,EAAAA,EAAAL,EAAAK,IAATF,EAASE,GAAAJ,UAAAI,GAAA,OAAK,IAAIR,EAAOM,IAFrB,CAIhB,SAAUA,GACX,IAAMG,EAAoB,CAAC,MAAO,MAAO,QACnCC,EAAgB,GACpBC,EAAa,GACbC,EAAQ,GAGVN,EAAUO,QAAQ,SAACC,GACjB,IAAMC,EAAQD,EAASC,MAAM,KAC3BC,EAAYD,EAAMA,EAAMV,OAAS,GAE/BI,EAAkBQ,SAASD,IAC7BL,EAAWO,KAAKJ,KAIpB,KAAKK,OAAS,SAAUC,GAKtB,MAJmB,mBAARA,GACTV,EAAcQ,KAAKE,GAGd,MAGT,SAAUC,IAAqB,IAAAC,EAAA,KAAXC,EAAKnB,UAAAC,OAAAD,QAAAoB,IAAApB,UAAAoB,GAAApB,UAAG,GAAA,EAC1B,QAAIoB,IAAcb,EAAWY,GAA7B,CAMA,IAAIE,EAAM,IAAIC,MACdD,EAAIE,IAAMhB,EAAWY,GACrBE,EAAIG,iBAAiB,OAAQ,WAC3BhB,EAAMM,KAAKO,GACXJ,IAAYE,UARZb,EAAcG,QAAQ,SAACgB,GAAC,OAAKA,EAAEC,KAAKR,EAAMV,EAAOD,KAHrD,CAaG,IACF","file":"resource.loader.88870817.js","sourceRoot":"..","sourcesContent":["const Resources = (function (loader, global) {\n  if (global.document) {\n    return (...resources) => new loader(resources);\n  }\n})(function (resources) {\n  const IMG_ALLOWED_TYPES = ['png', 'jpg', 'jpeg'];\n  const loadCallbacks = [],\n    $resources = [],\n    $imgs = [];\n\n  //extension black listing\n  resources.forEach((resource) => {\n    const split = resource.split('.'),\n      extension = split[split.length - 1];\n\n    if (IMG_ALLOWED_TYPES.includes(extension)) {\n      $resources.push(resource);\n    }\n  });\n\n  this.onLoad = function (fns) {\n    if (typeof fns === 'function') {\n      loadCallbacks.push(fns);\n    }\n\n    return this;\n  };\n\n  (function loadImage(index = 0) {\n    if (undefined === $resources[index]) {\n      //exec callbacks\n      loadCallbacks.forEach((f) => f.call(this, $imgs, $resources));\n\n      return;\n    }\n    let img = new Image();\n    img.src = $resources[index];\n    img.addEventListener('load', function () {\n      $imgs.push(img);\n      loadImage(++index);\n    });\n  })(0);\n}, this);\n"]}