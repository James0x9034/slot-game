{"mappings":"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","sources":["js/slot.js"],"sourcesContent":["const Slot = function (canvas) {\n  this.canvas = canvas;\n  let auto = false;\n  let reels = [...range(1, 3)].map((i) => new Reel(canvas, conf.reel.xOffsets[i - 1]));\n\n  let delta = 0;\n  let currentSpin = [];\n\n  this.checkout = function () {\n    if (confirm('Are you sure? We can keep your money better!')) {\n      conf.player.money = 0;\n      conf.balance.value = conf.player.money;\n      conf.win.classList.remove('blink');\n      auto = false;\n      alert('Your operation has been made successfully');\n    }\n  };\n\n  this.setCredits = function () {\n    conf.player.money = conf.balance.value;\n\n    return this;\n  };\n\n  this.spin = function () {\n    conf.win.value = 0;\n    conf.sound.spin.play();\n    if (conf.player.money - conf.bet.value * 1 < 0) {\n      conf.sound.spin.currentTime = 0;\n      conf.sound.spin.pause();\n      alert('You dont have enough credits!');\n      auto = false;\n\n      return;\n    }\n\n    conf.balance.value = conf.player.money;\n    currentSpin = [];\n    reels.forEach((reel) => {\n      reel.clicked = true;\n      reel.finalAnimation = false;\n      reel.finalShapes = reel.setFinalShapes();\n      currentSpin.push(reel.finalShapes);\n    });\n    conf.spinBtn.setAttribute('disabled', 'disabled');\n    conf.what.setAttribute('disabled', 'disabled');\n    conf.where.setAttribute('disabled', 'disabled');\n    conf.bet.setAttribute('disabled', 'disabled');\n    conf.mode.setAttribute('disabled', 'disabled');\n    conf.checkout.setAttribute('disabled', 'disabled');\n    conf.win.classList.remove('blink');\n  };\n\n  this.setMode = function () {\n    reels.forEach((reel) => {\n      reel.mode = conf.mode.value;\n      reel.fixedPlace = conf.where.value;\n      reel.fixedImg = conf.what.value;\n    });\n  };\n\n  this.loop = function (now) {\n    reels.forEach((reel, i) => {\n      this.drawStopPoints();\n      //init spin animation\n      reel.spinAnimation();\n      reel.spin2point();\n\n      if (reel.clicked) {\n        reel.clicked = false;\n        reel.clickTime = now;\n        reel.spinning = true;\n      }\n\n      delta = now - reel.clickTime;\n      if (delta > conf.reel.animTimes[i] && reel.spinning) {\n        reel.finalAnimation = true;\n        reel.spinning = false;\n\n        if (i === 2) {\n          conf.spinBtn.removeAttribute('disabled');\n          conf.what.removeAttribute('disabled');\n          conf.where.removeAttribute('disabled');\n          conf.mode.removeAttribute('disabled');\n          conf.checkout.removeAttribute('disabled');\n          reel.done(() => {\n            //reset sound and stop\n            conf.sound.spin.currentTime = 0;\n            conf.sound.spin.pause();\n            let won = check(currentSpin);\n            if (auto) {\n              setTimeout(\n                function () {\n                  conf.spinBtn.click();\n                },\n                won ? conf.autoModeDelay : 300,\n              );\n            }\n          });\n        }\n      }\n    });\n  };\n\n  this.start = function () {\n    conf.sound.win.volume = 1.0;\n    conf.sound.spin.volume = 0.03;\n    reels.forEach((reel) => {\n      reel.clicked = true;\n      reel.finalAnimation = false;\n      reel.finalShapes = reel.setFinalShapes();\n    });\n    reels.forEach((reel, i) => {\n      reel.clicked = false;\n      reel.finalAnimation = true;\n      reel.spinning = false;\n    });\n    return this;\n  };\n\n  this.drawStopPoints = function () {\n    this.canvas.strokeStyle = '#121212';\n    [60, 120, 180].forEach((x) => {\n      this.canvas.strokeRect(0, x - 2, 5, 0);\n      this.canvas.strokeRect(conf.width - 5, x - 2, 5, 0);\n    });\n  };\n\n  let check = function (reels) {\n    if (reels[0][0].stop !== reels[1][0].stop || reels[1][0].stop !== reels[2][0].stop) {\n      //no win\n      // return;\n    }\n\n    let sum = {\n      top: 0,\n      middle: 0,\n      bottom: 0,\n    };\n\n    //coefficient - custom added.\n    let bet = conf.bet.value * 1;\n\n    let highlightPts = [];\n    //all reels are aligned in one line\n    for (let r = 0; r < reels.length; r++) {\n      let reel1 = reels[0][r],\n        reel2 = reels[1][r],\n        reel3 = reels[2][r];\n      let reelsStr = reel1.key + reel2.key + reel3.key;\n      //top line\n      if (reel1.stop === 0) {\n        if (reelsStr.match(/(Cherry){3}/g)) sum.top += bet * 2000;\n        else if (reelsStr.match(/(7){3}/g)) sum.top += bet * 150;\n        else if (reelsStr.match(/(7|Cherry){3}/g)) sum.top += bet * 75;\n        else if (reelsStr.match(/(3xBAR){3}/g)) sum.top += bet * 50;\n        else if (reelsStr.match(/(2xBAR){3}/g)) sum.top += bet * 20;\n        else if (reelsStr.match(/(BAR){3}/g)) sum.top += bet * 10;\n        else if (reelsStr.match(/(BAR|2xBAR|3xBAR){3}/g)) sum.top += bet * 5;\n        if (sum.top !== 0) {\n          highlightPts.push(0 + conf.reel.height / 2);\n        }\n      }\n      //middle line\n      if (reel1.stop === 60) {\n        if (reelsStr.match(/(Cherry){3}/g)) sum.middle += bet * 1000;\n        else if (reelsStr.match(/(7){3}/g)) sum.middle += bet * 150;\n        else if (reelsStr.match(/(7|Cherry){3}/g)) sum.middle += bet * 75;\n        else if (reelsStr.match(/(3xBAR){3}/g)) sum.middle += bet * 50;\n        else if (reelsStr.match(/(2xBAR){3}/g)) sum.middle += bet * 20;\n        else if (reelsStr.match(/(BAR){3}/g)) sum.middle += bet * 10;\n        else if (reelsStr.match(/(BAR|2xBAR|3xBAR){3}/g)) sum.middle += bet * 5;\n        if (sum.middle !== 0) {\n          highlightPts.push(60 + conf.reel.height / 2);\n        }\n      }\n      //bottom line\n      if (reel1.stop === 120) {\n        if (reelsStr.match(/(Cherry){3}/g)) sum.bottom += bet * 4000;\n        else if (reelsStr.match(/(7){3}/g)) sum.bottom += bet * 150;\n        else if (reelsStr.match(/(7|Cherry){3}/g)) sum.bottom += bet * 75;\n        else if (reelsStr.match(/(3xBAR){3}/g)) sum.bottom += bet * 50;\n        else if (reelsStr.match(/(2xBAR){3}/g)) sum.bottom += bet * 20;\n        else if (reelsStr.match(/(BAR){3}/g)) sum.bottom += bet * 10;\n        else if (reelsStr.match(/(BAR|2xBAR|3xBAR){3}/g)) sum.bottom += bet * 5;\n        if (sum.bottom !== 0) {\n          highlightPts.push(120 + conf.reel.height / 2);\n        }\n      }\n    }\n\n    //heightlight winner row\n    let margin = 10;\n    highlightPts.forEach((i) => {\n      canvas.beginPath();\n      canvas.moveTo(margin, i - 2);\n      canvas.lineTo(conf.width - margin, i - 2);\n      canvas.strokeStyle = '#FF0000';\n      canvas.stroke();\n    });\n\n    let totalSum = 10;\n    //sum.top + sum.middle + sum.bottom;\n\n    conf.totalWin.value = Number(conf.totalWin.value) + totalSum;\n    if (totalSum !== 0) {\n      conf.sound.win.play();\n      conf.win.classList.add('blink');\n      conf.win.value = totalSum;\n      console.log(sum);\n      return true;\n    }\n    return false;\n  };\n\n};\n"],"names":["Slot","canvas","this","auto","reels","range","map","i","Reel","conf","reel","xOffsets","delta","currentSpin","checkout","confirm","player","money","balance","value","win","classList","remove","alert","setCredits","spin","sound","play","bet","currentTime","pause","forEach","clicked","finalAnimation","finalShapes","setFinalShapes","push","spinBtn","setAttribute","what","where","mode","setMode","fixedPlace","fixedImg","loop","now","drawStopPoints","spinAnimation","spin2point","clickTime","spinning","animTimes","removeAttribute","done","won","check","setTimeout","click","autoModeDelay","start","volume","strokeStyle","x","strokeRect","width","stop","sum","top","middle","bottom","highlightPts","r","length","reel1","reel2","reel3","reelsStr","key","match","height","beginPath","moveTo","lineTo","stroke","totalWin","Number","add","console","log"],"version":3,"file":"index.5d38560c.js.map"}