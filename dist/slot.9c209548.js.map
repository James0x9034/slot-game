{"version":3,"sources":["js/slot.js"],"names":["Slot","canvas","auto","reels","_toConsumableArray","range","map","i","Reel","conf","reel","xOffsets","currentSpin","checkout","confirm","player","money","balance","value","win","classList","remove","alert","setCredits","spin","sound","play","bet","forEach","clicked","finalAnimation","finalShapes","setFinalShapes","push","spinBtn","setAttribute","what","where","mode","setMode","fixedPlace","fixedImg","loop","now","_this","drawStopPoints","spinAnimation","spin2point","clickTime","spinning","animTimes","removeAttribute","done","currentTime","pause","won","check","setTimeout","click","autoModeDelay","start","volume","_this2","strokeStyle","x","strokeRect","width","stop","sum","top","middle","bottom","highlightPts","r","length","reel1","reel2","reel3","reelsStr","key","match","height","beginPath","moveTo","lineTo","stroke","totalSum","totalWin","Number","add","console","log"],"mappings":"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","file":"slot.9c209548.js","sourceRoot":"..","sourcesContent":["const Slot = function (canvas) {\n  this.canvas = canvas;\n  let auto = false;\n  let reels = [...range(1, 3)].map((i) => new Reel(canvas, conf.reel.xOffsets[i - 1]));\n\n  let delta = 0;\n  let currentSpin = [];\n\n  this.checkout = function () {\n    if (confirm('Are you sure? We can keep your money better!')) {\n      conf.player.money = 0;\n      conf.balance.value = conf.player.money;\n      conf.win.classList.remove('blink');\n      auto = false;\n      alert('Your operation has been made successfully');\n    }\n  };\n\n  this.setCredits = function () {\n    // conf.player.money = conf.balance.value;\n\n    return this;\n  };\n\n  this.spin = function () {\n    conf.win.value = 0;\n    conf.sound.spin.play();\n    if (conf.player.money - conf.bet.value * 1 < 0) {\n      // conf.sound.spin.currentTime = 0;\n      // conf.sound.spin.pause();\n      // alert('You dont have enough credits!');\n      // auto = false;\n\n      // return;\n    }\n\n    // conf.balance.value = conf.player.money;\n    currentSpin = [];\n    reels.forEach((reel) => {\n      reel.clicked = true;\n      reel.finalAnimation = false;\n      reel.finalShapes = reel.setFinalShapes();\n      currentSpin.push(reel.finalShapes);\n    });\n    conf.spinBtn.setAttribute('disabled', 'disabled');\n    conf.what.setAttribute('disabled', 'disabled');\n    conf.where.setAttribute('disabled', 'disabled');\n    conf.bet.setAttribute('disabled', 'disabled');\n    conf.mode.setAttribute('disabled', 'disabled');\n    conf.checkout.setAttribute('disabled', 'disabled');\n    conf.win.classList.remove('blink');\n  };\n\n  this.setMode = function () {\n    reels.forEach((reel) => {\n      reel.mode = conf.mode.value;\n      reel.fixedPlace = conf.where.value;\n      reel.fixedImg = conf.what.value;\n    });\n  };\n\n  this.loop = function (now) {\n    reels.forEach((reel, i) => {\n      this.drawStopPoints();\n      //init spin animation\n      reel.spinAnimation();\n      reel.spin2point();\n\n      if (reel.clicked) {\n        reel.clicked = false;\n        reel.clickTime = now;\n        reel.spinning = true;\n      }\n\n      delta = now - reel.clickTime;\n      if (delta > conf.reel.animTimes[i] && reel.spinning) {\n        reel.finalAnimation = true;\n        reel.spinning = false;\n\n        if (i === 2) {\n          conf.spinBtn.removeAttribute('disabled');\n          conf.what.removeAttribute('disabled');\n          conf.where.removeAttribute('disabled');\n          conf.mode.removeAttribute('disabled');\n          conf.checkout.removeAttribute('disabled');\n          reel.done(() => {\n            //reset sound and stop\n            conf.sound.spin.currentTime = 0;\n            conf.sound.spin.pause();\n            let won = check(currentSpin);\n            if (auto) {\n              setTimeout(\n                function () {\n                  conf.spinBtn.click();\n                },\n                won ? conf.autoModeDelay : 300,\n              );\n            }\n          });\n        }\n      }\n    });\n  };\n\n  this.start = function () {\n    conf.sound.win.volume = 1.0;\n    conf.sound.spin.volume = 0.03;\n    reels.forEach((reel) => {\n      reel.clicked = true;\n      reel.finalAnimation = false;\n      reel.finalShapes = reel.setFinalShapes();\n    });\n    reels.forEach((reel, i) => {\n      reel.clicked = false;\n      reel.finalAnimation = true;\n      reel.spinning = false;\n    });\n    return this;\n  };\n\n  this.drawStopPoints = function () {\n    this.canvas.strokeStyle = '#121212';\n    [60, 120, 180].forEach((x) => {\n      this.canvas.strokeRect(0, x - 2, 5, 0);\n      this.canvas.strokeRect(conf.width - 5, x - 2, 5, 0);\n    });\n  };\n\n  let check = function (reels) {\n    if (reels[0][0].stop !== reels[1][0].stop || reels[1][0].stop !== reels[2][0].stop) {\n      //no win\n      // return;\n    }\n\n    let sum = {\n      top: 0,\n      middle: 0,\n      bottom: 0,\n    };\n\n    //coefficient - custom added.\n    let bet = conf.bet.value * 1;\n\n    let highlightPts = [];\n    //all reels are aligned in one line\n    for (let r = 0; r < reels.length; r++) {\n      let reel1 = reels[0][r],\n        reel2 = reels[1][r],\n        reel3 = reels[2][r];\n      let reelsStr = reel1.key + reel2.key + reel3.key;\n      //top line\n      if (reel1.stop === 0) {\n        if (reelsStr.match(/(Cherry){3}/g)) sum.top += bet * 2000;\n        else if (reelsStr.match(/(7){3}/g)) sum.top += bet * 150;\n        else if (reelsStr.match(/(7|Cherry){3}/g)) sum.top += bet * 75;\n        else if (reelsStr.match(/(3xBAR){3}/g)) sum.top += bet * 50;\n        else if (reelsStr.match(/(2xBAR){3}/g)) sum.top += bet * 20;\n        else if (reelsStr.match(/(BAR){3}/g)) sum.top += bet * 10;\n        else if (reelsStr.match(/(BAR|2xBAR|3xBAR){3}/g)) sum.top += bet * 5;\n        if (sum.top !== 0) {\n          highlightPts.push(0 + conf.reel.height / 2);\n        }\n      }\n      //middle line\n      if (reel1.stop === 60) {\n        if (reelsStr.match(/(Cherry){3}/g)) sum.middle += bet * 1000;\n        else if (reelsStr.match(/(7){3}/g)) sum.middle += bet * 150;\n        else if (reelsStr.match(/(7|Cherry){3}/g)) sum.middle += bet * 75;\n        else if (reelsStr.match(/(3xBAR){3}/g)) sum.middle += bet * 50;\n        else if (reelsStr.match(/(2xBAR){3}/g)) sum.middle += bet * 20;\n        else if (reelsStr.match(/(BAR){3}/g)) sum.middle += bet * 10;\n        else if (reelsStr.match(/(BAR|2xBAR|3xBAR){3}/g)) sum.middle += bet * 5;\n        if (sum.middle !== 0) {\n          highlightPts.push(60 + conf.reel.height / 2);\n        }\n      }\n      //bottom line\n      if (reel1.stop === 120) {\n        if (reelsStr.match(/(Cherry){3}/g)) sum.bottom += bet * 4000;\n        else if (reelsStr.match(/(7){3}/g)) sum.bottom += bet * 150;\n        else if (reelsStr.match(/(7|Cherry){3}/g)) sum.bottom += bet * 75;\n        else if (reelsStr.match(/(3xBAR){3}/g)) sum.bottom += bet * 50;\n        else if (reelsStr.match(/(2xBAR){3}/g)) sum.bottom += bet * 20;\n        else if (reelsStr.match(/(BAR){3}/g)) sum.bottom += bet * 10;\n        else if (reelsStr.match(/(BAR|2xBAR|3xBAR){3}/g)) sum.bottom += bet * 5;\n        if (sum.bottom !== 0) {\n          highlightPts.push(120 + conf.reel.height / 2);\n        }\n      }\n    }\n\n    //heightlight winner row\n    let margin = 10;\n    highlightPts.forEach((i) => {\n      canvas.beginPath();\n      canvas.moveTo(margin, i - 2);\n      canvas.lineTo(conf.width - margin, i - 2);\n      canvas.strokeStyle = '#FF0000';\n      canvas.stroke();\n    });\n\n    let totalSum = sum.top + sum.middle + sum.bottom;\n\n    conf.totalWin.value = Number(conf.totalWin.value) + totalSum;\n    if (totalSum !== 0) {\n      conf.sound.win.play();\n      conf.win.classList.add('blink');\n      conf.win.value = totalSum;\n      console.log(sum);\n      return true;\n    }\n    return false;\n  };\n\n};\n"]}