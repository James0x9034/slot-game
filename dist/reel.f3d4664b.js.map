{"version":3,"sources":["js/reel.js"],"names":["Reel","canvas","offsetX","arguments","length","undefined","reelMap","conf","imgMap","shuffle","map","text","index","offsetY","reel","height","imgStartPts","key","fnc","spinning","finalAnimation","clickTime","showedLastAnim","clicked","mode","fixedPlace","fixedImg","finalShapes","draw","blur","img","hasOwnProperty","clearRect","width","strokeStyle","filter","concat","lineWidth","fillRect","strokeRect","drawImage","spinAnimation","skip","forEach","pSkip","generateReelShapesFixed","_this","imgMp","x","rndImg2","rnd","splice","indexOf","rndImg3","stop","generateReelShapesRandom","rndImg1","setFinalShapes","spin2point","stopPt","_this2","done","fn"],"mappings":"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","file":"reel.f3d4664b.js","sourceRoot":"..","sourcesContent":["const Reel = function (canvas, offsetX = 0) {\n  //generate img objects for a reel\n  this.reelMap = conf.imgMap.shuffle().map((text, index) => ({\n    offsetY: conf.reel.height * conf.imgStartPts[index],\n    key: text,\n  }));\n  this.fnc = null;\n  this.spinning = false;\n  this.finalAnimation = false;\n  this.clickTime = 0;\n  this.showedLastAnim = false;\n  this.clicked = false;\n  this.mode = 'random';\n  this.fixedPlace = 'top';\n  this.fixedImg = 'BAR';\n  this.finalShapes = [];\n  //clear whole reel\n  const clear = function () {\n    canvas.clearRect(offsetX, conf.height, conf.reel.width, conf.height);\n  };\n\n  //draw image to specific point\n  const draw = function (key = 'BAR', offsetY = 0, blur = 0) {\n    if (conf.img.hasOwnProperty(key)) {\n      clear();\n\n      canvas.strokeStyle = '#000';\n      canvas.filter = `blur(${blur}px)`;\n      canvas.lineWidth = 4;\n      canvas.fillRect(offsetX, offsetY, conf.reel.width, conf.reel.height);\n      canvas.strokeRect(offsetX, offsetY, conf.reel.width, conf.reel.height);\n      canvas.drawImage(conf.img[key], offsetX, offsetY);\n      canvas.filter = 'none';\n    }\n  };\n\n  this.spinAnimation = function (skip) {\n    if (!this.spinning) return;\n\n    this.reelMap.forEach((img) => {\n      img.offsetY += conf.pSkip;\n\n      //reset prev and jump very top\n      if (img.offsetY >= conf.height) {\n        img.offsetY = conf.reel.height * -3;\n      }\n\n      //draw img object\n      draw(img.key, img.offsetY, 4);\n    });\n  };\n\n  this.generateReelShapesFixed = function () {\n    let imgMp = conf.imgMap.filter((x) => x !== this.fixedImg);\n    let rndImg2 = imgMp.rnd();\n    imgMp.splice(imgMp.indexOf(rndImg2), 1);\n    let rndImg3 = imgMp.rnd();\n    switch (this.fixedPlace) {\n      case 'top':\n        return [\n          {\n            offsetY: -60,\n            key: this.fixedImg,\n            stop: 0,\n          },\n          {\n            offsetY: 60,\n            key: rndImg2,\n            stop: 120,\n          },\n          {\n            offsetY: 180,\n            key: rndImg3,\n            stop: 240,\n          },\n        ];\n      case 'middle':\n        return [\n          {\n            offsetY: -120,\n            key: rndImg2,\n            stop: -60,\n          },\n          {\n            offsetY: 0,\n            key: this.fixedImg,\n            stop: 60,\n          },\n          {\n            offsetY: 120,\n            key: rndImg3,\n            stop: 180,\n          },\n        ];\n      default:\n        return [\n          {\n            offsetY: -180,\n            key: rndImg2,\n            stop: -120,\n          },\n          {\n            offsetY: -60,\n            key: rndImg3,\n            stop: 0,\n          },\n          {\n            offsetY: 60,\n            key: this.fixedImg,\n            stop: 120,\n          },\n        ];\n    }\n  };\n\n  this.generateReelShapesRandom = function () {\n    let imgMp = conf.imgMap.map((x) => x);\n    let rndImg1 = imgMp.rnd();\n    imgMp.splice(imgMp.indexOf(rndImg1), 1);\n    let rndImg2 = imgMp.rnd();\n    imgMp.splice(imgMp.indexOf(rndImg2), 1);\n    let rndImg3 = imgMp.rnd();\n\n    let rnd = [0, 60].rnd();\n    return [\n      {\n        offsetY: -120 + rnd,\n        key: rndImg1,\n        stop: -60 + rnd,\n      },\n      {\n        offsetY: 0 + rnd,\n        key: rndImg2,\n        stop: 60 + rnd,\n      },\n      {\n        offsetY: 120 + rnd,\n        key: rndImg3,\n        stop: 180 + rnd,\n      },\n    ];\n  };\n\n  this.setFinalShapes = function () {\n    switch (this.mode) {\n      case 'fixed':\n        return this.generateReelShapesFixed();\n        break;\n      default:\n        return this.generateReelShapesRandom();\n    }\n  };\n\n  this.spin2point = function () {\n    if (!this.finalAnimation) {\n      if (typeof this.fnc === 'function') {\n        this.fnc();\n        this.fnc = null;\n      }\n\n      return;\n    }\n\n    let stopPt;\n    this.finalShapes.forEach((img) => {\n      if (img.hasOwnProperty('stop')) {\n        stopPt = img.stop;\n      }\n      let inx = 6;\n      if (img.offsetY + inx === stopPt) {\n        this.finalAnimation = false;\n      }\n      img.offsetY += inx;\n\n      //draw img object\n      draw(img.key, img.offsetY);\n    });\n  };\n\n  this.done = function (fn) {\n    this.fnc = fn;\n  };\n};\n"]}